{"version":3,"sources":["config/dayjs.js","components/BaseStylings.js","components/Navigation.js","components/DatePicker.js","components/MealToggle.js","config/currency.js","components/Card.js","components/StickyCart.js","components/Modal.js","pages/ProductList.js","App.js","serviceWorker.js","index.js"],"names":["dayjs","locale","Text","styled","p","SubText","SeparatorLine","div","CenterContent","Wrapper","up","css","IconImg","imgBox","WhiteSpace","box","StickyTop","NavigationStyled","TextsGroup","LabelText","DestinationBox","DestinationText","Navigation","src","process","alt","height","DatePickerStyled","DateButton","button","DayName","props","opacity","color","DateNumber","DatePicker","chosenDate","setDate","dateArray","map","date","index","isWeekend","format","validateWeekend","isChosenDate","key","onClick","className","disabled","animateOnAppear","keyframes","MealToggleStyled","display","MealButton","MealText","MealToggle","currentMeal","setMeal","useState","setDisplay","position","window","pageYOffset","addEventListener","IDR","value","currency","symbol","decimal","separator","CardWrapper","CardImg","img","CardInfos","RatingInfo","RatingNumber","RatingStarsBox","ItemName","MerchantName","ItemPrice","Box","AddButton","Card","item","setCartIsVisible","imagePath","rating","precision","Rating","defaultValue","max","size","readOnly","name","merchant","price","animateOnLoad","StickyCartStyled","StickyCartBox","CartInfo","ItemsCarted","Narration","IconButton","BlurredBottom","StickyCart","setModalIsShown","ModalStyled","ModalWindow","CloseButtonBox","TitleText","InputForm","form","InputBox","input","LocationInputIcon","SearchResultBox","SearchResultInfo","ResultName","ResultAddress","Modal","isShown","setInput","isResultShown","setIsResultShown","onSubmit","event","preventDefault","console","log","autoComplete","onChange","search","target","length","autoFocus","searchResult","result","address","ProductList","meal","cartIsVisible","modalIsShown","items","theme","colors","primary","secondary","mainText","subText","subtle","outlineBorder","fonts","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c34ef2c3.chunk.js","sourcesContent":["import dayjs from 'dayjs'\nimport 'dayjs/locale/id'\n\ndayjs.locale('id')\n\n// import updateLocale from 'dayjs/plugin/updateLocale'\n// dayjs.extend(updateLocale)\n\n// dayjs.updateLocale('en', {\n//   weekdays: ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'],\n// })\n\nexport default dayjs\n","import styled, { css, up } from '@xstyled/styled-components'\n\nexport const Text = styled.p`\n  font-family: primary;\n  font-weight: 600;\n  font-size: 14px;\n  color: mainText;\n  &.white {\n    color: subtle;\n  }\n`\n\nexport const SubText = styled.p`\n  font-family: primary;\n  font-weight: 600;\n  font-size: 8px;\n  color: subText;\n  &.white {\n    color: subtle;\n  }\n`\n\nexport const SeparatorLine = styled.div`\n  width: 100vw;\n  border-bottom: 1px solid;\n  border-bottom-color: subtle;\n  box-shadow: 0 8px 10px 0 rgba(10, 31, 68, 0.1);\n`\n\nexport const CenterContent = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`\n\nexport const Wrapper = styled.div`\n  margin: 0 16px;\n  display: flex;\n  width: 335px;\n\n  ${up(\n    'sm',\n    css`\n      justify-content: center;\n    `\n  )}\n`\n\nexport const IconImg = styled.imgBox`\n  height: 30px;\n`\n\nexport const WhiteSpace = styled.box`\n  background-color: white;\n  z-index: 1;\n`\n\nexport const StickyTop = styled.div`\n  position: fixed;\n  top: 0;\n  background-color: white;\n  z-index: 3;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n","import React from 'react'\nimport styled from '@xstyled/styled-components'\n\nimport { Text, SubText, IconImg } from './BaseStylings'\n\nconst NavigationStyled = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 16px 0 0 16px;\n`\n\nconst TextsGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 8px;\n`\nconst LabelText = styled(SubText)`\n  margin: 4px 8px;\n  font-size: 8px;\n`\n\nconst DestinationBox = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst DestinationText = styled(Text)`\n  margin: 0 8px;\n`\n\nconst Navigation = () => {\n  return (\n    <NavigationStyled>\n      <IconImg\n        src={`${process.env.PUBLIC_URL}/icons/arrow-left.svg`}\n        alt='arrow left icon'\n      ></IconImg>\n      <TextsGroup>\n        <LabelText>ALAMAT PENGANTARAN</LabelText>\n        <DestinationBox>\n          <DestinationText>Tokopedia Tower</DestinationText>\n          <IconImg\n            src={`${process.env.PUBLIC_URL}/icons/arrow-down-ios.svg`}\n            alt='arrow down icon'\n            height='16px'\n          />\n        </DestinationBox>\n      </TextsGroup>\n    </NavigationStyled>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@xstyled/styled-components'\n\nimport dayjs from '../config/dayjs'\nimport dateArray from '../data/dateArray.json'\n\nimport { Text, SubText } from './BaseStylings'\n\nconst DatePickerStyled = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  margin: 24px 0 4px 0;\n`\nconst DateButton = styled.button`\n  padding: 7px 14px;\n  margin: 0 8px;\n  border: none;\n  background: none;\n\n  &.chosenDate {\n    border-radius: 50%;\n    background-color: mainText;\n  }\n  &:focus {\n    outline: none;\n  }\n`\nconst DayName = styled(SubText)`\n  margin: 0;\n  font-size: 8px;\n  opacity: ${(props) => props.opacity};\n  color: ${(props) => props.color};\n`\nconst DateNumber = styled(Text)`\n  margin: 0;\n  font-size: 14px;\n  opacity: ${(props) => props.opacity};\n  color: ${(props) => props.color};\n`\nconst DatePicker = ({ chosenDate, setDate }) => {\n  const validateWeekend = (date) =>\n    dayjs(date).format('dddd') === 'Sabtu' ||\n    dayjs(date).format('dddd') === 'Minggu'\n      ? true\n      : false\n\n  return (\n    <DatePickerStyled>\n      {dateArray.map((date, index) => {\n        const isWeekend = validateWeekend(date)\n        const isChosenDate = date === chosenDate ? true : false\n        return (\n          <DateButton\n            key={index}\n            onClick={() => setDate(date)}\n            className={isChosenDate && 'chosenDate'}\n            disabled={isWeekend && true}\n          >\n            <DayName\n              opacity={isWeekend ? '0.3' : '1'}\n              color={isChosenDate ? 'white' : ''}\n            >\n              {dayjs(date).format('ddd')}\n            </DayName>\n            <DateNumber\n              opacity={isWeekend ? '0.3' : '1'}\n              color={isChosenDate ? 'white' : ''}\n            >\n              {dayjs(date).format('DD')}\n            </DateNumber>\n          </DateButton>\n        )\n      })}\n    </DatePickerStyled>\n  )\n}\n\nDatePicker.propTypes = {\n  setDate: PropTypes.func.isRequired,\n  chosenDate: PropTypes.string.isRequired,\n}\n\nexport default DatePicker\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from '@xstyled/styled-components'\nimport { display } from '@xstyled/system'\n\nimport { Text } from './BaseStylings'\n\nconst animateOnAppear = keyframes`\n0% {\n    opacity: 0;\n    top: 100px;\n  }\n100% {\n    opacity: 1;\n    top: 136px;\n  }\n`\n\nconst MealToggleStyled = styled.div`\n  position: fixed;\n  top: 136px;\n  right: 50%;\n  transform: translateX(50%);\n  z-index: 2;\n  animation: ${animateOnAppear} 0.5s ease-in-out;\n  ${display}\n`\n\nconst MealButton = styled.button`\n  display: inline-block;\n  background: white;\n  border: 1px solid grey;\n  border-radius: 5px;\n  padding: 8px 64px;\n  box-shadow: 0 8px 10px 0 rgba(10, 31, 68, 0.1);\n\n  &.lunch {\n    border-right: none;\n    border-radius: 5px 0 0 5px;\n  }\n  &.dinner {\n    border-radius: 0 5px 5px 0;\n  }\n  &.active {\n    background-color: mainText;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst MealText = styled(Text)`\n  margin: 0;\n  color: ${(props) => props.color};\n`\n\nconst MealToggle = ({ currentMeal, setMeal }) => {\n  const [display, setDisplay] = useState('flex')\n  let position = window.pageYOffset\n  window.addEventListener('scroll', () => {\n    if (window.pageYOffset <= position) {\n      if (display !== 'flex') {\n        setDisplay('flex')\n      }\n    } else {\n      setDisplay('none')\n    }\n    position = window.pageYOffset\n  })\n  return (\n    <MealToggleStyled display={display}>\n      <MealButton\n        className={currentMeal === 'lunch' ? 'lunch active' : 'lunch'}\n        onClick={() => setMeal('lunch')}\n      >\n        <MealText color={currentMeal === 'lunch' ? 'white' : 'grey'}>\n          Lunch\n        </MealText>\n      </MealButton>\n      <MealButton\n        className={currentMeal === 'dinner' ? 'dinner active' : 'dinner'}\n        onClick={() => setMeal('dinner')}\n      >\n        <MealText color={currentMeal === 'dinner' ? 'white' : 'grey'}>\n          Dinner\n        </MealText>\n      </MealButton>\n    </MealToggleStyled>\n  )\n}\n\nMealToggle.propTypes = {\n  currentMeal: PropTypes.string.isRequired,\n  setMeal: PropTypes.func.isRequired,\n}\n\nexport default MealToggle\n","import currency from 'currency.js'\n\nconst IDR = (value) =>\n  currency(value, { symbol: 'Rp ', decimal: ',', separator: '.' })\n\nexport default IDR\n\nexport { currency }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@xstyled/styled-components'\nimport IDR, { currency } from '../config/currency'\nimport { Rating } from '@material-ui/lab'\n\nimport { Text, SubText } from '../components/BaseStylings'\n\nconst CardWrapper = styled.div`\n  margin: 24px;\n  max-width: 335px;\n  border-radius: 5px;\n  box-shadow: 0 8px 10px 0 rgba(10, 31, 68, 0.1);\n`\n\nconst CardImg = styled.img`\n  width: 335px;\n  height: 240px;\n`\n\nconst CardInfos = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n`\n\nconst RatingInfo = styled.div`\n  display: flex;\n`\n\nconst RatingNumber = styled(Text)`\n  margin: 0 0 4px 0;\n`\n\nconst RatingStarsBox = styled.div`\n  display: flex;\n  margin-left: 8px;\n`\n\nconst ItemName = styled(Text)`\n  margin: 4px 0;\n`\n\nconst MerchantName = styled(SubText)`\n  font-size: 12px;\n  margin: 4px 0 8px 0;\n`\n\nconst ItemPrice = styled(Text)`\n  margin: 8px 0;\n`\n\nconst Box = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst AddButton = styled.button`\n  border: none;\n  background-color: primary;\n  font-family: primary;\n  font-weight: 600;\n  color: subtle;\n  padding: 8px 16px;\n  border-radius: 5px;\n`\n\nconst Card = ({ item, setCartIsVisible }) => {\n  return (\n    <CardWrapper>\n      <CardImg src={process.env.PUBLIC_URL + item.imagePath} />\n      <CardInfos>\n        <RatingInfo>\n          <RatingNumber>\n            {currency(item.rating, { precision: 1, symbol: '' }).format()}\n          </RatingNumber>\n          <RatingStarsBox>\n            <Rating\n              defaultValue={item.rating}\n              max={5}\n              precision={0.5}\n              size='small'\n              readOnly\n            />\n          </RatingStarsBox>\n        </RatingInfo>\n        <ItemName>{item.name}</ItemName>\n        <MerchantName>{item.merchant}</MerchantName>\n        <Box>\n          <ItemPrice>{IDR(item.price).format()}</ItemPrice>\n          <AddButton onClick={() => setCartIsVisible(true)}>ADD +</AddButton>\n        </Box>\n      </CardInfos>\n    </CardWrapper>\n  )\n}\n\nCard.propTypes = {\n  item: PropTypes.object.isRequired,\n  setCartIsVisible: PropTypes.func.isRequired,\n}\n\nexport default Card\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from '@xstyled/styled-components'\n\nimport { Text, SubText, IconImg } from './BaseStylings'\n\nconst animateOnLoad = keyframes`\n  0% {\n    opacity: 0;\n    bottom: -50px;\n  }\n  100% {\n    opacity: 1;\n    bottom: 0;\n  }\n`\nconst StickyCartStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  bottom: 0;\n  animation: 0.5s ${animateOnLoad} ease-in-out;\n`\nconst StickyCartBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 330px;\n  padding: 8px 16px;\n  background-color: secondary;\n  border-radius: 5px;\n`\nconst CartInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst ItemsCarted = styled(Text)`\n  font-size: 12px;\n  margin: 0;\n`\nconst Narration = styled(SubText)`\n  margin: 0;\n`\n\nconst IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  border: none;\n  background: none;\n`\n\nconst BlurredBottom = styled.div`\n  height: 16px;\n  background: linear-gradient(to bottom, rgba(255, 255, 255, 0), #ffffff);\n`\n\nconst StickyCart = ({ setModalIsShown }) => {\n  return (\n    <StickyCartStyled>\n      <StickyCartBox>\n        <CartInfo>\n          <ItemsCarted className='white'>5 items | Rp 125.000</ItemsCarted>\n          <Narration className='white'>Termasuk ongkos kirim</Narration>\n        </CartInfo>\n        <IconButton onClick={() => setModalIsShown(true)}>\n          <IconImg\n            src={process.env.PUBLIC_URL + '/icons/shopping-cart.svg'}\n            alt='shopping cart icon'\n            height={20}\n          />\n          <IconImg\n            src={process.env.PUBLIC_URL + '/icons/arrow-right-ios.svg'}\n            alt='arrow right ios icon'\n            height={12}\n          />\n        </IconButton>\n      </StickyCartBox>\n      <BlurredBottom></BlurredBottom>\n    </StickyCartStyled>\n  )\n}\n\nStickyCart.propTypes = {\n  setModalIsShown: PropTypes.func.isRequired,\n}\n\nexport default StickyCart\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@xstyled/styled-components'\n\nimport { IconImg, Text, SubText } from '../components/BaseStylings'\n\nimport searchResult from '../data/searchResult.json'\n\nconst ModalStyled = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 5;\n  display: ${(props) => props.display};\n`\n\nconst ModalWindow = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 375px;\n  max-width: 375px;\n  height: 685px;\n  position: fixed;\n  top: 127px;\n  left: 50%;\n  transform: translateX(-50%);\n  border-radius: 8px 8px 0 0;\n  background-color: white;\n  z-index: 6;\n  display: ${(props) => props.display};\n  padding: 24px;\n  overflow-y: hidden;\n`\nconst CloseButtonBox = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n`\n\nconst TitleText = styled(Text)`\n  font-size: 20px;\n`\nconst InputForm = styled.form`\n  display: flex;\n`\nconst InputBox = styled.input`\n  border: 1px solid;\n  border-color: mainText;\n  border-radius: 4px;\n  height: 40px;\n  padding-left: 32px;\n  width: 100%;\n`\nconst LocationInputIcon = styled(IconImg)`\n  position: absolute;\n  height: 20;\n  transform: translate(10px, 10px);\n`\nconst SearchResultBox = styled.div`\n  display: flex;\n  margin: 16px 0;\n`\nconst SearchResultInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 8px;\n`\nconst ResultName = styled(Text)`\n  font-size: 12px;\n  margin: 0;\n`\nconst ResultAddress = styled(SubText)`\n  margin: 0;\n`\nconst Modal = ({ isShown, setModalIsShown }) => {\n  const [input, setInput] = useState('')\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    console.log(event.value)\n  }\n  const [isResultShown, setIsResultShown] = useState(false)\n  const handleOnChange = (search) => {\n    setInput(search)\n    if (search.length >= 3) {\n      setIsResultShown(true)\n    } else {\n      setIsResultShown(false)\n    }\n  }\n  return (\n    <>\n      <ModalStyled\n        display={isShown ? 'flex' : 'none'}\n        onClick={() => setModalIsShown(false)}\n      ></ModalStyled>\n      <ModalWindow display={isShown ? 'flex' : 'none'}>\n        <CloseButtonBox>\n          <IconImg\n            src={process.env.PUBLIC_URL + '/icons/close.svg'}\n            onClick={() => setModalIsShown(false)}\n          />\n        </CloseButtonBox>\n        <TitleText>Cek makanan yang tersedia di lokasi kamu!</TitleText>\n        <div>\n          <LocationInputIcon\n            src={process.env.PUBLIC_URL + '/icons/location-mark.svg'}\n          />\n          <InputForm onSubmit={handleSubmit} autoComplete='off'>\n            <InputBox\n              name='search'\n              value={input}\n              onChange={(event) => handleOnChange(event.target.value)}\n              autoFocus\n            ></InputBox>\n          </InputForm>\n        </div>\n        {isResultShown &&\n          searchResult.map((result, index) => (\n            <SearchResultBox key={index}>\n              <IconImg\n                src={process.env.PUBLIC_URL + '/icons/location-choose.svg'}\n              />\n              <SearchResultInfo>\n                <ResultName>{result.name}</ResultName>\n                <ResultAddress>{result.address}</ResultAddress>\n              </SearchResultInfo>\n            </SearchResultBox>\n          ))}\n      </ModalWindow>\n    </>\n  )\n}\n\nModal.propTypes = {\n  isShown: PropTypes.bool.isRequired,\n  setModalIsShown: PropTypes.func.isRequired,\n}\n\nexport default Modal\n","import React, { useState } from 'react'\nimport dayjs from '../config/dayjs'\n\nimport Navigation from '../components/Navigation'\nimport DatePicker from '../components/DatePicker'\nimport MealToggle from '../components/MealToggle'\nimport Card from '../components/Card'\nimport StickyCart from '../components/StickyCart'\nimport Modal from '../components/Modal'\nimport {\n  Text,\n  SeparatorLine,\n  CenterContent,\n  Wrapper,\n  WhiteSpace,\n  StickyTop,\n} from '../components/BaseStylings'\n\nimport items from '../data/items.json'\n\nconst ProductList = () => {\n  const [date, setDate] = useState('2020-09-28')\n  const [meal, setMeal] = useState('lunch')\n  const [cartIsVisible, setCartIsVisible] = useState(false)\n  const [modalIsShown, setModalIsShown] = useState(false)\n\n  return (\n    <>\n      <StickyTop>\n        <Navigation></Navigation>\n        <DatePicker setDate={setDate} chosenDate={date} />\n        <SeparatorLine />\n      </StickyTop>\n      <WhiteSpace height='132px' />\n      <MealToggle currentMeal={meal} setMeal={setMeal} />\n      <WhiteSpace height='60px' />\n      <CenterContent>\n        <Wrapper>\n          <Text>{dayjs(date).format('dddd, DD MMMM YYYY')}</Text>\n        </Wrapper>\n      </CenterContent>\n      <CenterContent>\n        {items.map((item, index) => (\n          <Card key={index} item={item} setCartIsVisible={setCartIsVisible} />\n        ))}\n      </CenterContent>\n      {cartIsVisible && (\n        <CenterContent>\n          <StickyCart setModalIsShown={setModalIsShown}></StickyCart>\n        </CenterContent>\n      )}\n      <WhiteSpace height='40px' />\n      <Modal isShown={modalIsShown} setModalIsShown={setModalIsShown}></Modal>\n    </>\n  )\n}\n\nexport default ProductList\n","import React from 'react'\nimport { ThemeProvider } from '@xstyled/styled-components'\nimport ProductList from './pages/ProductList'\n\nconst theme = {\n  colors: {\n    primary: '#F9423A',\n    secondary: '#A23530',\n    mainText: '#424749',\n    subText: '#6E7679',\n    subtle: '#e2e4e4',\n    outlineBorder: '#f1f1f2',\n  },\n  fonts: {\n    primary: 'Noto Sans',\n  },\n}\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <ProductList></ProductList>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}